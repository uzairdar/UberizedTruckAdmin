[{"E:\\Work Material\\React projects\\uberized-truck\\src\\index.js":"1","E:\\Work Material\\React projects\\uberized-truck\\src\\App.js":"2","E:\\Work Material\\React projects\\uberized-truck\\src\\reportWebVitals.js":"3","E:\\Work Material\\React projects\\uberized-truck\\src\\Pages\\Login.js":"4","E:\\Work Material\\React projects\\uberized-truck\\src\\Pages\\Register.js":"5","E:\\Work Material\\React projects\\uberized-truck\\src\\Pages\\Dashboard.js":"6","E:\\Work Material\\React projects\\uberized-truck\\src\\Assets\\serverdetails.js":"7","E:\\Work Material\\React projects\\uberized-truck\\src\\Components\\Header.js":"8","E:\\Work Material\\React projects\\uberized-truck\\src\\Pages\\AdminLogin.js":"9","E:\\Work Material\\React projects\\uberized-truck\\src\\Services\\AdminService.js":"10","E:\\Work Material\\React projects\\uberized-truck\\src\\Pages\\AdminDashboard.js":"11","E:\\Work Material\\React projects\\uberized-truck\\src\\Pages\\AdminUsers.js":"12","E:\\Work Material\\React projects\\uberized-truck\\src\\Services\\UserServices.js":"13","E:\\Work Material\\React projects\\uberized-truck\\src\\Components\\ThumbListView.js":"14","E:\\Work Material\\React projects\\uberized-truck\\src\\Pages\\Messages.js":"15","E:\\Work Material\\React projects\\uberized-truck\\src\\Components\\MessageList.js":"16","E:\\Work Material\\React projects\\uberized-truck\\src\\Pages\\Rides.js":"17","E:\\Work Material\\React projects\\uberized-truck\\src\\Components\\RideList.js":"18"},{"size":547,"mtime":1612423867078,"results":"19","hashOfConfig":"20"},{"size":1552,"mtime":1624707143390,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1607498742852,"results":"22","hashOfConfig":"20"},{"size":3685,"mtime":1612439125953,"results":"23","hashOfConfig":"20"},{"size":7313,"mtime":1612515433209,"results":"24","hashOfConfig":"20"},{"size":1177,"mtime":1612514184933,"results":"25","hashOfConfig":"20"},{"size":123,"mtime":1624709575325,"results":"26","hashOfConfig":"20"},{"size":3796,"mtime":1624707209913,"results":"27","hashOfConfig":"20"},{"size":4254,"mtime":1624532005781,"results":"28","hashOfConfig":"20"},{"size":1860,"mtime":1624708692566,"results":"29","hashOfConfig":"20"},{"size":119,"mtime":1622751023944,"results":"30","hashOfConfig":"20"},{"size":1027,"mtime":1624701000556,"results":"31","hashOfConfig":"20"},{"size":236,"mtime":1622750684438,"results":"32","hashOfConfig":"20"},{"size":14705,"mtime":1622896523419,"results":"33","hashOfConfig":"20"},{"size":1485,"mtime":1624699076858,"results":"34","hashOfConfig":"20"},{"size":6719,"mtime":1624700934265,"results":"35","hashOfConfig":"20"},{"size":698,"mtime":1624708974241,"results":"36","hashOfConfig":"20"},{"size":4541,"mtime":1624709253939,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1ggfjrz",{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Work Material\\React projects\\uberized-truck\\src\\index.js",[],["78","79"],"E:\\Work Material\\React projects\\uberized-truck\\src\\App.js",["80","81","82","83","84","85"],"E:\\Work Material\\React projects\\uberized-truck\\src\\reportWebVitals.js",[],"E:\\Work Material\\React projects\\uberized-truck\\src\\Pages\\Login.js",["86","87","88"],"import React, { useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Badge,\r\n  Input,\r\n  Button,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\nimport LoginTruck from \"../Assets/LoginTruck.jpg\";\r\nimport Logo from \"../Assets/logo.svg\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport \"./css/Login.css\";\r\nconst loginSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .required(\"Email is required\")\r\n    .email(\"Email must have proper format\"),\r\n  password: yup.string().required(\"Password is required\"),\r\n});\r\nfunction Login() {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"top pl-4 pr-4\">\r\n        <p>Uberized-Truck</p>\r\n        <Col lg=\"1\" xs=\"3\" md=\"2\">\r\n          <img\r\n            alt=\"outwig-logo\"\r\n            src={Logo}\r\n            style={{ width: \"100%\", cursor: \"pointer\" }}\r\n            onClick={() => history.push(\"./dashboard\")}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Card>\r\n        <CardBody>\r\n          <Formik\r\n            initialValues={{ email: \"\", password: \"\" }}\r\n            validationSchema={loginSchema}\r\n            onSubmit={(values, actions) => {}}\r\n          >\r\n            {(formikProps) => (\r\n              <div>\r\n                <center>\r\n                  <Row>\r\n                    <Col lg=\"12\">\r\n                      <img\r\n                        alt=\"Uber-logo\"\r\n                        src={LoginTruck}\r\n                        style={{ width: \"70%\" }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <h2>Welcome Back!</h2>\r\n                  <Row>\r\n                    <Col lg=\"12\">\r\n                      <Input\r\n                        placeholder=\"Username\"\r\n                        value={formikProps.values.username}\r\n                        onChange={formikProps.handleChange(\"email\")}\r\n                        onBlur={formikProps.handleBlur(\"email\")}\r\n                      />\r\n                      <div className=\"error\">\r\n                        {formikProps.touched.email && formikProps.errors.email}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mt-2\">\r\n                    <Col lg=\"12\">\r\n                      <Input\r\n                        placeholder=\"Password\"\r\n                        value={formikProps.values.password}\r\n                        onChange={formikProps.handleChange(\"password\")}\r\n                        onBlur={formikProps.handleBlur(\"password\")}\r\n                        type=\"password\"\r\n                      />\r\n                      <div className=\"error\">\r\n                        {formikProps.touched.password &&\r\n                          formikProps.errors.password}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    className=\"mt-2\"\r\n                    style={{\r\n                      borderRadius: \"0px 0px 20px 20px\",\r\n                    }}\r\n                    onClick={formikProps.handleSubmit}\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                  <p>Do you have an account?</p>\r\n                  <Badge\r\n                    onClick={() => history.push(\"/register\")}\r\n                    className=\"signuplink\"\r\n                  >\r\n                    Sign Up\r\n                  </Badge>\r\n                </center>\r\n              </div>\r\n            )}\r\n          </Formik>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","E:\\Work Material\\React projects\\uberized-truck\\src\\Pages\\Register.js",["89","90","91"],"import React, { useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Button,\r\n  Badge,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\nimport LoginTruck from \"../Assets/LoginTruck.jpg\";\r\nimport Logo from \"../Assets/logo.svg\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport \"./css/Login.css\";\r\nimport { baseUrl } from \"../Assets/serverdetails\";\r\n\r\nconst signupSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .required(\"Email is required\")\r\n    .email(\"Email should have a proper format\"),\r\n  username: yup.string().required(\"Username is required\"),\r\n  password: yup.string().required(\"Password is required\"),\r\n  mobile: yup.string().required(\"Mobile no is required\"),\r\n  position: yup.string().required(\"Position is required\"),\r\n});\r\nfunction Register() {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"top pl-4 pr-4\">\r\n        <p>Uberized-Truck</p>\r\n        <Col lg=\"1\" xs=\"3\" md=\"2\">\r\n          <img\r\n            alt=\"outwig-logo\"\r\n            src={Logo}\r\n            style={{ width: \"100%\", cursor: \"pointer\" }}\r\n            onClick={() => history.push(\"./dashboard\")}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Card>\r\n        <CardBody>\r\n          <Formik\r\n            initialValues={{\r\n              email: \"\",\r\n              username: \"\",\r\n              password: \"\",\r\n              mobile: \"\",\r\n              position: \"\",\r\n            }}\r\n            validationSchema={signupSchema}\r\n            onSubmit={(values, actions) => {\r\n              console.log(\"hello\", values);\r\n              axios({\r\n                method: \"post\",\r\n                url: `${baseUrl}/user/createaccount`,\r\n                data: {\r\n                  email: values.email,\r\n                  password: values.password,\r\n                  username: values.username,\r\n                  mobile: values.mobile,\r\n                  position: values.position,\r\n                },\r\n              })\r\n                .then((response) => {\r\n                  console.log(\"res\", response);\r\n                })\r\n                .catch((error) => {\r\n                  console.log(\"error\", error);\r\n                });\r\n            }}\r\n          >\r\n            {(formikProps) => (\r\n              <div>\r\n                <center>\r\n                  <Row>\r\n                    <Col lg=\"12\">\r\n                      <img\r\n                        alt=\"Uber-logo\"\r\n                        src={LoginTruck}\r\n                        style={{ width: \"70%\" }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <h2>Welcome!</h2>\r\n                  <p>Please create an account to continue!</p>\r\n                  <Row>\r\n                    <Col lg=\"12\">\r\n                      <Input\r\n                        placeholder=\"Choose a Email\"\r\n                        value={formikProps.values.email}\r\n                        onChange={formikProps.handleChange(\"email\")}\r\n                        onBlur={formikProps.handleBlur(\"email\")}\r\n                      />\r\n                      <div className=\"error\">\r\n                        {formikProps.touched.email && formikProps.errors.email}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col lg=\"12\">\r\n                      <Input\r\n                        placeholder=\"Choose a username\"\r\n                        className=\"mt-2\"\r\n                        value={formikProps.values.username}\r\n                        onChange={formikProps.handleChange(\"username\")}\r\n                        onBlur={formikProps.handleBlur(\"username\")}\r\n                      />\r\n                      <div className=\"error\">\r\n                        {formikProps.touched.username &&\r\n                          formikProps.errors.username}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mt-2\">\r\n                    <Col lg=\"12\">\r\n                      <Input\r\n                        placeholder=\"Password\"\r\n                        value={formikProps.values.password}\r\n                        onChange={formikProps.handleChange(\"password\")}\r\n                        onBlur={formikProps.handleBlur(\"password\")}\r\n                        type=\"password\"\r\n                      />\r\n                      <div className=\"error\">\r\n                        {formikProps.touched.password &&\r\n                          formikProps.errors.password}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mt-2\">\r\n                    <Col lg=\"12\">\r\n                      <Input\r\n                        placeholder=\"Mobile no\"\r\n                        value={formikProps.values.mobile}\r\n                        onChange={formikProps.handleChange(\"mobile\")}\r\n                        onBlur={formikProps.handleBlur(\"mobile\")}\r\n                        type=\"text\"\r\n                      />\r\n                      <div className=\"error\">\r\n                        {formikProps.touched.mobile &&\r\n                          formikProps.errors.mobile}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <h3>As </h3>\r\n                  <Row>\r\n                    <Col>\r\n                      <Input\r\n                        id=\"position\"\r\n                        type=\"radio\"\r\n                        value=\"driver\"\r\n                        name=\"position\"\r\n                        onChange={formikProps.handleChange(\"position\")}\r\n                        defaultChecked={\r\n                          formikProps.values.position === \"driver\"\r\n                        }\r\n                      />\r\n                      <label htmlFor=\"driver\">Driver</label>\r\n                      <br />\r\n                      <h3>Or</h3>\r\n                      <Input\r\n                        id=\"position\"\r\n                        type=\"radio\"\r\n                        value=\"client\"\r\n                        name=\"position\"\r\n                        onChange={formikProps.handleChange(\"position\")}\r\n                        defaultChecked={\r\n                          formikProps.values.position === \"client\"\r\n                        }\r\n                      />\r\n                      <label htmlFor=\"client\">Client</label>\r\n                    </Col>\r\n                  </Row>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    className=\"mt-2\"\r\n                    style={{\r\n                      borderRadius: \"0px 0px 20px 20px\",\r\n                    }}\r\n                    onClick={formikProps.handleSubmit}\r\n                  >\r\n                    Register\r\n                  </Button>\r\n                  <p>Already have account? </p>\r\n                  <Badge\r\n                    onClick={() => history.push(\"/login\")}\r\n                    className=\"signuplink\"\r\n                  >\r\n                    Please Login\r\n                  </Badge>\r\n                </center>\r\n              </div>\r\n            )}\r\n          </Formik>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","E:\\Work Material\\React projects\\uberized-truck\\src\\Pages\\Dashboard.js",[],"E:\\Work Material\\React projects\\uberized-truck\\src\\Assets\\serverdetails.js",[],"E:\\Work Material\\React projects\\uberized-truck\\src\\Components\\Header.js",["92","93","94","95","96","97","98","99","100","101","102","103"],"E:\\Work Material\\React projects\\uberized-truck\\src\\Pages\\AdminLogin.js",["104","105","106","107","108"],"E:\\Work Material\\React projects\\uberized-truck\\src\\Services\\AdminService.js",[],"E:\\Work Material\\React projects\\uberized-truck\\src\\Pages\\AdminDashboard.js",[],"E:\\Work Material\\React projects\\uberized-truck\\src\\Pages\\AdminUsers.js",["109","110"],"E:\\Work Material\\React projects\\uberized-truck\\src\\Services\\UserServices.js",[],"E:\\Work Material\\React projects\\uberized-truck\\src\\Components\\ThumbListView.js",["111","112","113","114","115","116","117","118"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CustomInput,\r\n  Badge,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Row,\r\n  Input,\r\n  InputGroup,\r\n  Col,\r\n  InputGroupAddon,\r\n} from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport truck from \"../Assets/logo.jpg\";\r\nimport Select from \"react-select\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport classnames from \"classnames\";\r\nimport { ContextMenuTrigger } from \"react-contextmenu\";\r\nimport { StepLabel, Step, Stepper } from \"@material-ui/core\";\r\nimport { DeleteUser, UpdateUser } from \"../Services/AdminService\";\r\nconst accountSchema = yup.object({\r\n  firstname: yup.string().required(\"First name is required\"),\r\n  email: yup\r\n    .string()\r\n    .required(\"Email is required\")\r\n    .email(\"Email should have a proper format\"),\r\n  lastname: yup.string(),\r\n  // .required(\"Last name is required\"),\r\n  address: yup.string(),\r\n  // .required(\"Address is required\"),\r\n  country: yup.string(),\r\n  // .required(\"Country is required\"),\r\n  phone: yup.string(),\r\n  // .required(\"Phone is required\"),\r\n});\r\nconst ThumbListView = ({ user, isSelect, collect, check, setCheck }) => {\r\n  const [modalRight, setModalRight] = useState(false);\r\n\r\n  var count = 0;\r\n  const options = [\r\n    { value: \"client\", label: \"Client\" },\r\n    { value: \"driver\", label: \"Driver\" },\r\n  ];\r\n  const options2 = [\r\n    { value: \"verified\", label: \"Verified\" },\r\n    { value: \"not verified\", label: \"Not Verified\" },\r\n  ];\r\n  const [selectedCategory, setSelectedCategory] = useState(user.position);\r\n  const [selectedVerification, setSelectedVerification] = useState(\r\n    user.isVerified ? \"verified\" : \"not verified\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(\"user\");\r\n  }, []);\r\n\r\n  const onProceed = () => {};\r\n  return (\r\n    <Col\r\n      xxs=\"12\"\r\n      key={user._id}\r\n      className=\"mb-3\"\r\n      // style={{ borderBottom: \"1px solid silver\" }}\r\n    >\r\n      {/* {console.log('order'), user} */}\r\n      <Card\r\n        // onClick={(event) => onCheckItem(event, user._id)}\r\n        className={classnames(\"d-flex flex-row\", {\r\n          active: isSelect,\r\n        })}\r\n      >\r\n        <NavLink to={`?p=${user._id}`} className=\"d-flex\">\r\n          <img\r\n            style={{ width: \"90px\", minWidth: \"90px\", maxWidth: \"90px\" }}\r\n            alt={user && user.gig && user.gig.title}\r\n            src={user?.image ? user.image : truck}\r\n            className=\"list-thumbnail responsive border-0 card-img-left\"\r\n          />\r\n        </NavLink>\r\n        <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n          <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n            <NavLink to={`?p=${user._id}`} className=\"w-40 w-sm-100\">\r\n              <p className=\"list-item-heading mb-1 truncate\">\r\n                {user?.firstname}-{user?.lastname}\r\n              </p>\r\n            </NavLink>\r\n            <p className=\"mb-1  text-small w-15 w-sm-100\">{user?.email}</p>\r\n            <p className=\"mb-1 x text-small w-15 w-sm-100\">{user?.mobile}</p>\r\n            <p className=\"mb-1 x text-small w-15 w-sm-100\">\r\n              {user?.address ? user.address : \"no address\"}\r\n            </p>\r\n            <p className=\"mb-1 x text-small w-15 w-sm-100\">\r\n              {user?.country ? user.country : \"no country\"}\r\n            </p>\r\n            <p className=\"mb-1 \">{user?.position}</p>\r\n            <p className=\"mb-1 \">\r\n              {user?.isVerified ? \"Verified\" : \"Not Verified\"}\r\n            </p>\r\n          </div>\r\n          <div className=\"custom-control  pl-1 align-self-center pr-2\">\r\n            <Button\r\n              size=\"xs\"\r\n              style={{ width: \"100%\" }}\r\n              onClick={() => setModalRight(true)}\r\n              color=\"primary\"\r\n            >\r\n              Edit\r\n            </Button>\r\n          </div>\r\n          <div className=\"custom-control  pl-1 align-self-center pr-2\">\r\n            <Button\r\n              size=\"xs\"\r\n              style={{ width: \"100%\" }}\r\n              color=\"warning\"\r\n              onClick={() => {\r\n                DeleteUser(user?._id).then((response) => {\r\n                  console.log(\"response\", response);\r\n                  if (response?.data?.user) {\r\n                    setCheck(!check);\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </div>\r\n          <Formik\r\n            initialValues={{\r\n              firstname: user?.firstname ? user.firstname : \"\",\r\n              lastname: user?.lastname ? user.lastname : \"\",\r\n              email: user?.email ? user.email : \"\",\r\n              address: user?.address ? user.address : \"\",\r\n              phone: user?.mobile ? user.mobile : \"\",\r\n              country: user?.country ? user.country : \"\",\r\n            }}\r\n            validationSchema={accountSchema}\r\n            onSubmit={(values, actions) => {\r\n              console.log(\r\n                \"values\",\r\n                values,\r\n                selectedCategory,\r\n                selectedVerification\r\n              );\r\n              const data = {\r\n                firstname: values.firstname,\r\n                lastname: values.lastname,\r\n                email: values.email,\r\n                address: values.address,\r\n                mobile: values.phone,\r\n                country: values.country,\r\n                position: selectedCategory,\r\n                isVerified: selectedVerification === \"verified\" ? true : false,\r\n              };\r\n              UpdateUser(user._id, data)\r\n                .then((response) => {\r\n                  console.log(\"response\", response);\r\n                  if (response.data.user) {\r\n                    setCheck(!check);\r\n                    setModalRight(false);\r\n                  }\r\n                })\r\n                .catch((err) => {\r\n                  console.log(\"err\", err);\r\n                });\r\n            }}\r\n          >\r\n            {(formikProps) => (\r\n              <div>\r\n                <Modal\r\n                  isOpen={modalRight}\r\n                  toggle={() => setModalRight(!modalRight)}\r\n                  wrapClassName=\"modal-right\"\r\n                >\r\n                  <ModalHeader>Feedback</ModalHeader>\r\n                  <ModalBody>\r\n                    <Row className=\"mt-4\">\r\n                      <Col xxs=\"12\">\r\n                        <Card className=\"mb-4\">\r\n                          <CardBody>\r\n                            <CardTitle>\r\n                              {/* <IntlMessages id=\"Rate your overall Experience\" /> */}\r\n                            </CardTitle>\r\n                            <InputGroup className=\"mt-2\">\r\n                              <InputGroupAddon addonType=\"prepend\">\r\n                                First Name\r\n                              </InputGroupAddon>\r\n                              <Input\r\n                                value={formikProps.values.firstname}\r\n                                onChange={formikProps.handleChange(\"firstname\")}\r\n                                onBlur={formikProps.handleBlur(\"firstname\")}\r\n                                // style={styles.input}\r\n                                placeholder=\"First name\"\r\n                              />\r\n                            </InputGroup>\r\n\r\n                            {formikProps.touched.firstname &&\r\n                              formikProps.errors.firstname && (\r\n                                <div className=\"error\">\r\n                                  {formikProps.touched.firstname &&\r\n                                    formikProps.errors.firstname}\r\n                                </div>\r\n                              )}\r\n                            <InputGroup className=\"mt-2\">\r\n                              <InputGroupAddon addonType=\"prepend\">\r\n                                Last Name\r\n                              </InputGroupAddon>\r\n                              <Input\r\n                                value={formikProps.values.lastname}\r\n                                onChange={formikProps.handleChange(\"lastname\")}\r\n                                onBlur={formikProps.handleBlur(\"lastname\")}\r\n                                placeholder=\"Last name\"\r\n                              />\r\n                            </InputGroup>\r\n                            {formikProps.touched.lastname &&\r\n                              formikProps.errors.lastname && (\r\n                                <div className=\"error\">\r\n                                  {formikProps.touched.lastname &&\r\n                                    formikProps.errors.lastname}\r\n                                </div>\r\n                              )}\r\n                            <InputGroup className=\"mt-2\">\r\n                              <InputGroupAddon addonType=\"prepend\">\r\n                                Email\r\n                              </InputGroupAddon>\r\n                              <Input\r\n                                value={formikProps.values.email}\r\n                                onChange={formikProps.handleChange(\"email\")}\r\n                                onBlur={formikProps.handleBlur(\"email\")}\r\n                                placeholder=\"Last name\"\r\n                              />\r\n                            </InputGroup>\r\n                            {formikProps.touched.email &&\r\n                              formikProps.errors.email && (\r\n                                <div className=\"error\">\r\n                                  {formikProps.touched.email &&\r\n                                    formikProps.errors.email}\r\n                                </div>\r\n                              )}\r\n                            <InputGroup className=\"mt-2\">\r\n                              <InputGroupAddon addonType=\"prepend\">\r\n                                Address\r\n                              </InputGroupAddon>\r\n                              <Input\r\n                                // style={styles.input}\r\n                                placeholder=\"Home address\"\r\n                                value={formikProps.values.address}\r\n                                onChange={formikProps.handleChange(\"address\")}\r\n                                onBlur={formikProps.handleBlur(\"address\")}\r\n                              />\r\n                            </InputGroup>\r\n                            {formikProps.touched.address &&\r\n                              formikProps.errors.address && (\r\n                                <p>\r\n                                  {formikProps.touched.address &&\r\n                                    formikProps.errors.address}\r\n                                </p>\r\n                              )}\r\n                            <InputGroup className=\"mt-2\">\r\n                              <InputGroupAddon addonType=\"prepend\">\r\n                                Country\r\n                              </InputGroupAddon>{\" \"}\r\n                              <Input\r\n                                placeholder=\"Country\"\r\n                                value={formikProps.values.country}\r\n                                onChange={formikProps.handleChange(\"country\")}\r\n                                onBlur={formikProps.handleBlur(\"country\")}\r\n                              />\r\n                            </InputGroup>\r\n                            {formikProps.touched.country &&\r\n                              formikProps.errors.country && (\r\n                                <p className=\"error\">\r\n                                  {formikProps.touched.country &&\r\n                                    formikProps.errors.country}\r\n                                </p>\r\n                              )}\r\n                            <InputGroup className=\"mt-2\">\r\n                              <InputGroupAddon addonType=\"prepend\">\r\n                                Mobile\r\n                              </InputGroupAddon>\r\n                              <Input\r\n                                value={formikProps.values.phone}\r\n                                onChange={formikProps.handleChange(\"phone\")}\r\n                                onBlur={formikProps.handleBlur(\"phone\")}\r\n                                placeholder=\"Phone No\"\r\n                              />\r\n                            </InputGroup>\r\n                            {formikProps.touched.phone &&\r\n                              formikProps.errors.phone && (\r\n                                <p className=\"error\">\r\n                                  {formikProps.touched.phone &&\r\n                                    formikProps.errors.phone}\r\n                                </p>\r\n                              )}\r\n                            <p style={{ marginBottom: \"0px\" }} className=\"mt-2\">\r\n                              Position\r\n                            </p>\r\n                            <Select\r\n                              value={selectedCategory}\r\n                              placeholder={selectedCategory}\r\n                              onChange={(e) => setSelectedCategory(e.value)}\r\n                              options={options}\r\n                            />\r\n                            <p style={{ marginBottom: \"0px\" }} className=\"mt-2\">\r\n                              Verification\r\n                            </p>\r\n                            <Select\r\n                              value={selectedVerification}\r\n                              placeholder={selectedVerification}\r\n                              onChange={(e) => setSelectedVerification(e.value)}\r\n                              options={options2}\r\n                            />\r\n                          </CardBody>\r\n                        </Card>\r\n                      </Col>\r\n                    </Row>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button color=\"primary\" onClick={formikProps.handleSubmit}>\r\n                      Proceed\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      onClick={() => setModalRight(false)}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n              </div>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\r\n// export default React.memo(ThumbListView);\r\n\r\nexport default ThumbListView;\r\n","E:\\Work Material\\React projects\\uberized-truck\\src\\Pages\\Messages.js",["119"],"E:\\Work Material\\React projects\\uberized-truck\\src\\Components\\MessageList.js",["120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136"],"E:\\Work Material\\React projects\\uberized-truck\\src\\Pages\\Rides.js",[],"E:\\Work Material\\React projects\\uberized-truck\\src\\Components\\RideList.js",["137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161"],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":1,"column":8,"nodeType":"168","messageId":"169","endLine":1,"endColumn":12},{"ruleId":"166","severity":1,"message":"170","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":13},{"ruleId":"166","severity":1,"message":"171","line":8,"column":3,"nodeType":"168","messageId":"169","endLine":8,"endColumn":11},{"ruleId":"166","severity":1,"message":"172","line":11,"column":8,"nodeType":"168","messageId":"169","endLine":11,"endColumn":16},{"ruleId":"166","severity":1,"message":"173","line":12,"column":8,"nodeType":"168","messageId":"169","endLine":12,"endColumn":17},{"ruleId":"166","severity":1,"message":"174","line":15,"column":8,"nodeType":"168","messageId":"169","endLine":15,"endColumn":22},{"ruleId":"166","severity":1,"message":"175","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"176","line":10,"column":3,"nodeType":"168","messageId":"169","endLine":10,"endColumn":13},{"ruleId":"166","severity":1,"message":"177","line":11,"column":3,"nodeType":"168","messageId":"169","endLine":11,"endColumn":12},{"ruleId":"166","severity":1,"message":"175","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"176","line":10,"column":3,"nodeType":"168","messageId":"169","endLine":10,"endColumn":13},{"ruleId":"166","severity":1,"message":"177","line":11,"column":3,"nodeType":"168","messageId":"169","endLine":11,"endColumn":12},{"ruleId":"166","severity":1,"message":"178","line":3,"column":3,"nodeType":"168","messageId":"169","endLine":3,"endColumn":6},{"ruleId":"166","severity":1,"message":"179","line":4,"column":3,"nodeType":"168","messageId":"169","endLine":4,"endColumn":9},{"ruleId":"166","severity":1,"message":"180","line":5,"column":3,"nodeType":"168","messageId":"169","endLine":5,"endColumn":11},{"ruleId":"166","severity":1,"message":"181","line":6,"column":3,"nodeType":"168","messageId":"169","endLine":6,"endColumn":7},{"ruleId":"166","severity":1,"message":"182","line":7,"column":3,"nodeType":"168","messageId":"169","endLine":7,"endColumn":11},{"ruleId":"166","severity":1,"message":"176","line":8,"column":3,"nodeType":"168","messageId":"169","endLine":8,"endColumn":13},{"ruleId":"166","severity":1,"message":"183","line":9,"column":3,"nodeType":"168","messageId":"169","endLine":9,"endColumn":11},{"ruleId":"166","severity":1,"message":"177","line":10,"column":3,"nodeType":"168","messageId":"169","endLine":10,"endColumn":12},{"ruleId":"166","severity":1,"message":"184","line":11,"column":3,"nodeType":"168","messageId":"169","endLine":11,"endColumn":9},{"ruleId":"166","severity":1,"message":"185","line":14,"column":22,"nodeType":"168","messageId":"169","endLine":14,"endColumn":33},{"ruleId":"186","severity":1,"message":"187","line":55,"column":11,"nodeType":"188","endLine":55,"endColumn":70},{"ruleId":"186","severity":1,"message":"187","line":93,"column":13,"nodeType":"188","endLine":97,"endColumn":15},{"ruleId":"166","severity":1,"message":"175","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"189","line":7,"column":3,"nodeType":"168","messageId":"169","endLine":7,"endColumn":8},{"ruleId":"166","severity":1,"message":"176","line":10,"column":3,"nodeType":"168","messageId":"169","endLine":10,"endColumn":13},{"ruleId":"166","severity":1,"message":"177","line":11,"column":3,"nodeType":"168","messageId":"169","endLine":11,"endColumn":12},{"ruleId":"166","severity":1,"message":"190","line":14,"column":8,"nodeType":"168","messageId":"169","endLine":14,"endColumn":12},{"ruleId":"166","severity":1,"message":"191","line":10,"column":9,"nodeType":"168","messageId":"169","endLine":10,"endColumn":16},{"ruleId":"192","severity":1,"message":"193","line":24,"column":6,"nodeType":"194","endLine":24,"endColumn":13,"suggestions":"195"},{"ruleId":"166","severity":1,"message":"196","line":6,"column":3,"nodeType":"168","messageId":"169","endLine":6,"endColumn":14},{"ruleId":"166","severity":1,"message":"189","line":7,"column":3,"nodeType":"168","messageId":"169","endLine":7,"endColumn":8},{"ruleId":"166","severity":1,"message":"197","line":26,"column":10,"nodeType":"168","messageId":"169","endLine":26,"endColumn":28},{"ruleId":"166","severity":1,"message":"198","line":27,"column":10,"nodeType":"168","messageId":"169","endLine":27,"endColumn":19},{"ruleId":"166","severity":1,"message":"199","line":27,"column":21,"nodeType":"168","messageId":"169","endLine":27,"endColumn":25},{"ruleId":"166","severity":1,"message":"200","line":27,"column":27,"nodeType":"168","messageId":"169","endLine":27,"endColumn":34},{"ruleId":"166","severity":1,"message":"201","line":47,"column":7,"nodeType":"168","messageId":"169","endLine":47,"endColumn":12},{"ruleId":"166","severity":1,"message":"202","line":65,"column":9,"nodeType":"168","messageId":"169","endLine":65,"endColumn":18},{"ruleId":"203","severity":1,"message":"204","line":15,"column":44,"nodeType":"205","messageId":"206","endLine":15,"endColumn":46},{"ruleId":"166","severity":1,"message":"177","line":5,"column":3,"nodeType":"168","messageId":"169","endLine":5,"endColumn":12},{"ruleId":"166","severity":1,"message":"196","line":6,"column":3,"nodeType":"168","messageId":"169","endLine":6,"endColumn":14},{"ruleId":"166","severity":1,"message":"189","line":7,"column":3,"nodeType":"168","messageId":"169","endLine":7,"endColumn":8},{"ruleId":"166","severity":1,"message":"207","line":14,"column":3,"nodeType":"168","messageId":"169","endLine":14,"endColumn":8},{"ruleId":"166","severity":1,"message":"208","line":15,"column":3,"nodeType":"168","messageId":"169","endLine":15,"endColumn":13},{"ruleId":"166","severity":1,"message":"209","line":17,"column":3,"nodeType":"168","messageId":"169","endLine":17,"endColumn":18},{"ruleId":"166","severity":1,"message":"210","line":21,"column":8,"nodeType":"168","messageId":"169","endLine":21,"endColumn":14},{"ruleId":"166","severity":1,"message":"211","line":23,"column":10,"nodeType":"168","messageId":"169","endLine":23,"endColumn":16},{"ruleId":"166","severity":1,"message":"197","line":26,"column":10,"nodeType":"168","messageId":"169","endLine":26,"endColumn":28},{"ruleId":"166","severity":1,"message":"198","line":27,"column":10,"nodeType":"168","messageId":"169","endLine":27,"endColumn":19},{"ruleId":"166","severity":1,"message":"199","line":27,"column":21,"nodeType":"168","messageId":"169","endLine":27,"endColumn":25},{"ruleId":"166","severity":1,"message":"200","line":27,"column":27,"nodeType":"168","messageId":"169","endLine":27,"endColumn":34},{"ruleId":"166","severity":1,"message":"212","line":28,"column":10,"nodeType":"168","messageId":"169","endLine":28,"endColumn":20},{"ruleId":"166","severity":1,"message":"213","line":28,"column":22,"nodeType":"168","messageId":"169","endLine":28,"endColumn":32},{"ruleId":"166","severity":1,"message":"214","line":29,"column":7,"nodeType":"168","messageId":"169","endLine":29,"endColumn":20},{"ruleId":"166","severity":1,"message":"202","line":66,"column":9,"nodeType":"168","messageId":"169","endLine":66,"endColumn":18},{"ruleId":"186","severity":1,"message":"187","line":82,"column":11,"nodeType":"188","endLine":87,"endColumn":13},{"ruleId":"166","severity":1,"message":"182","line":4,"column":3,"nodeType":"168","messageId":"169","endLine":4,"endColumn":11},{"ruleId":"166","severity":1,"message":"177","line":5,"column":3,"nodeType":"168","messageId":"169","endLine":5,"endColumn":12},{"ruleId":"166","severity":1,"message":"196","line":6,"column":3,"nodeType":"168","messageId":"169","endLine":6,"endColumn":14},{"ruleId":"166","severity":1,"message":"189","line":7,"column":3,"nodeType":"168","messageId":"169","endLine":7,"endColumn":8},{"ruleId":"166","severity":1,"message":"215","line":9,"column":3,"nodeType":"168","messageId":"169","endLine":9,"endColumn":8},{"ruleId":"166","severity":1,"message":"216","line":10,"column":3,"nodeType":"168","messageId":"169","endLine":10,"endColumn":14},{"ruleId":"166","severity":1,"message":"217","line":11,"column":3,"nodeType":"168","messageId":"169","endLine":11,"endColumn":12},{"ruleId":"166","severity":1,"message":"218","line":12,"column":3,"nodeType":"168","messageId":"169","endLine":12,"endColumn":14},{"ruleId":"166","severity":1,"message":"178","line":13,"column":3,"nodeType":"168","messageId":"169","endLine":13,"endColumn":6},{"ruleId":"166","severity":1,"message":"207","line":14,"column":3,"nodeType":"168","messageId":"169","endLine":14,"endColumn":8},{"ruleId":"166","severity":1,"message":"208","line":15,"column":3,"nodeType":"168","messageId":"169","endLine":15,"endColumn":13},{"ruleId":"166","severity":1,"message":"209","line":17,"column":3,"nodeType":"168","messageId":"169","endLine":17,"endColumn":18},{"ruleId":"166","severity":1,"message":"210","line":21,"column":8,"nodeType":"168","messageId":"169","endLine":21,"endColumn":14},{"ruleId":"166","severity":1,"message":"211","line":23,"column":10,"nodeType":"168","messageId":"169","endLine":23,"endColumn":16},{"ruleId":"166","severity":1,"message":"197","line":26,"column":10,"nodeType":"168","messageId":"169","endLine":26,"endColumn":28},{"ruleId":"166","severity":1,"message":"198","line":27,"column":10,"nodeType":"168","messageId":"169","endLine":27,"endColumn":19},{"ruleId":"166","severity":1,"message":"199","line":27,"column":21,"nodeType":"168","messageId":"169","endLine":27,"endColumn":25},{"ruleId":"166","severity":1,"message":"200","line":27,"column":27,"nodeType":"168","messageId":"169","endLine":27,"endColumn":34},{"ruleId":"166","severity":1,"message":"212","line":28,"column":22,"nodeType":"168","messageId":"169","endLine":28,"endColumn":32},{"ruleId":"166","severity":1,"message":"213","line":28,"column":34,"nodeType":"168","messageId":"169","endLine":28,"endColumn":44},{"ruleId":"166","severity":1,"message":"214","line":29,"column":7,"nodeType":"168","messageId":"169","endLine":29,"endColumn":20},{"ruleId":"166","severity":1,"message":"219","line":45,"column":10,"nodeType":"168","messageId":"169","endLine":45,"endColumn":20},{"ruleId":"166","severity":1,"message":"220","line":45,"column":22,"nodeType":"168","messageId":"169","endLine":45,"endColumn":35},{"ruleId":"166","severity":1,"message":"202","line":56,"column":9,"nodeType":"168","messageId":"169","endLine":56,"endColumn":18},{"ruleId":"186","severity":1,"message":"187","line":72,"column":11,"nodeType":"188","endLine":77,"endColumn":13},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'Redirect' is defined but never used.","'Register' is defined but never used.","'Dashboard' is defined but never used.","'AdminDashboard' is defined but never used.","'useState' is defined but never used.","'CardHeader' is defined but never used.","'CardTitle' is defined but never used.","'Row' is defined but never used.","'Column' is defined but never used.","'Collapse' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardText' is defined but never used.","'Button' is defined but never used.","'useLocation' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Badge' is defined but never used.","'Logo' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location'. Either include it or remove the dependency array.","ArrayExpression",["223"],"'CustomInput' is defined but never used.","'ContextMenuTrigger' is defined but never used.","'StepLabel' is defined but never used.","'Step' is defined but never used.","'Stepper' is defined but never used.","'count' is assigned a value but never used.","'onProceed' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Input' is defined but never used.","'InputGroup' is defined but never used.","'InputGroupAddon' is defined but never used.","'Select' is defined but never used.","'Formik' is defined but never used.","'DeleteUser' is defined but never used.","'UpdateUser' is defined but never used.","'accountSchema' is assigned a value but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'modalRight' is assigned a value but never used.","'setModalRight' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},"Update the dependencies array to be: [check, location]",{"range":"226","text":"227"},[772,779],"[check, location]"]